//book
import java.util.Comparator;

public class Book implements Comparator <Book> {
    String name;
    String author;
    int year;
    Book(String name,String author,int year){
        this.name=name;
        this.author=author;
        this.year=year;
    }

    public int getYear() {
        return year;
    }
    String getName(){
        return name;
    }
    String getAuthor(){
        return author;
    }
    public String toString(){
        return "Name of Book: "+name+" Author: "+author+" Year: "+year;
    }
    public int compare(Book b1,Book b2){
        return b1.getYear()-b2.getYear();
    }
    public static Comparator<Book> YearComparator= new Comparator<Book>() {
        @Override
        public int compare(Book b1, Book b2) {
            return b1.getYear() - b2.getYear();
        }
    };
    public static Comparator<Book>NameComparator=new Comparator<Book>(){
        @Override
        public int compare(Book b1,Book b2) {
            return b1.getName().compareTo(b2.getName());
        }
    };


}
//library
import java.util.ArrayList;

public class Library {
    ArrayList <Book> list;
    Library(){
        list=new ArrayList<Book>();
    }
    void add(Book s){
        list.add(s);
    }
    void del(String name){
        int p=-1;
        for (int i=0;i<list.size();i++){
            if(name.equalsIgnoreCase(list.get(i).getName()))
                p=i;
        }
        if(p>-1){
            list.remove(p);
        }
    }
    public String toString(){
        String s ="";
        for(int i = 0; i<list.size(); i++){
            s+=list.get(i).toString()+"\n";
        }
        return s;
    }
    void sortByName(){
        list.sort(Book.NameComparator);
    }
    void sortByYear(){
        list.sort(Book.YearComparator);
    }
    void deleteInRange(int y1,int y2){
        for (int i=0;i< list.size();){
            if (list.get(i).getYear()>y1 && list.get(i).getYear()<y2)
                list.remove(i);
            else i++;
        }
    }
}
//panel
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MyPanel extends JPanel {
    JLabel l1,l2,l3,l4;
    JTextField f1,f2, f3,f4;
    JButton b1,b2,b3;
    JTextArea a;
    Library lib;
    MyPanel(){
        lib = new Library();
        l1 = new JLabel("Name");
        add(l1);
        f1 = new JTextField();
        f1.setColumns(10);
        add(f1);
        l2 = new JLabel("Author");
        add(l2);
        f2 = new JTextField();
        f2.setColumns(10);
        add(f2);
        l3 = new JLabel("Year");
        add(l3);
        f3 = new JTextField();
        f3.setColumns(10);
        add(f3);
        l4 = new JLabel("Book to delete");
        add(l4);
        f4 = new JTextField();
        f4.setColumns(10);
        add(f4);
        b1 = new JButton("Add");
        MyAddListener m1 = new MyAddListener();
        b1.addActionListener(m1);
        add(b1);
        b2 = new JButton("Sort");
        MySortListener m2 = new MySortListener();
        b2.addActionListener(m2);
        add(b2);
        b3 = new JButton("Delete");
        MyDeleteListener m3 = new MyDeleteListener();
        b3.addActionListener(m3);
        add(b3);
        a = new JTextArea();
        a.setColumns(20);
        a.setRows(10);
        a.setText("");
        add(a);
    }
    class MyAddListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e) {
            String s1 = f1.getText();
            String s2 = f2.getText();
            int s3 = Integer.parseInt(f3.getText());
            Book b = new Book(s1, s2, s3);
            lib.add(b);
            f1.setText("");
            f2.setText("");
            f3.setText("");
            a.append(b.toString());
        }
    }
    class MySortListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e) {
            a.setText("");
            lib.sortByName();
            a.setText(lib.toString());
        }
    }
    class MyDeleteListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e) {
            a.setText("");
            String s1 = f4.getText();
            lib.del(s1);
            a.setText(lib.toString());
        }
    }
}
//main
import java.util.*;
public class Main {
    public static void main(String [] args){
       MyFrame f = new MyFrame();
    }

}
//MyFrame
import javax.swing.*;
public class MyFrame extends JFrame {
    MyFrame(){
        setSize(800, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        MyPanel p = new MyPanel();
        add(p);
        setVisible(true);
    }
}

